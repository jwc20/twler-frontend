{"ast":null,"code":"var _jsxFileName = \"/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/charts/Chart.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport { dimensionsPropsType } from \"../utils/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartContext = /*#__PURE__*/createContext();\nexport const useChartDimensions = () => {\n  _s();\n\n  return useContext(ChartContext);\n};\n\n_s(useChartDimensions, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst Chart = _ref => {\n  let {\n    dimensions,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ChartContext.Provider, {\n    value: dimensions,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"Chart\",\n      width: 400,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${dimensions.marginLeft}, ${dimensions.marginTop})`,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Chart;\nChart.propTypes = {\n  dimensions: dimensionsPropsType\n};\nChart.defaultProps = {\n  dimensions: {}\n};\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["createContext","useContext","dimensionsPropsType","ChartContext","useChartDimensions","Chart","dimensions","children","marginLeft","marginTop","propTypes","defaultProps"],"sources":["/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/charts/Chart.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { dimensionsPropsType } from \"../utils/Utils\";\n\n\nconst ChartContext = createContext()\nexport const useChartDimensions = () => useContext(ChartContext)\n\nconst Chart = ({ dimensions, children }) => (\n  <ChartContext.Provider value={dimensions}>\n    <svg className=\"Chart\" width={400} height={400}>\n      <g transform={`translate(${dimensions.marginLeft}, ${dimensions.marginTop})`}>\n        { children }\n      </g>\n    </svg>\n  </ChartContext.Provider>\n)\n\nChart.propTypes = {\n  dimensions: dimensionsPropsType\n}\n\nChart.defaultProps = {\n  dimensions: {}\n}\n\nexport default Chart\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,mBAAT,QAAoC,gBAApC;;AAGA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,OAAO,MAAMI,kBAAkB,GAAG;EAAA;;EAAA,OAAMH,UAAU,CAACE,YAAD,CAAhB;AAAA,CAA3B;;GAAMC,kB;;AAEb,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC,UAAF;IAAcC;EAAd,CAAD;EAAA,oBACZ,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAED,UAA9B;IAAA,uBACE;MAAK,SAAS,EAAC,OAAf;MAAuB,KAAK,EAAE,GAA9B;MAAmC,MAAM,EAAE,GAA3C;MAAA,uBACE;QAAG,SAAS,EAAG,aAAYA,UAAU,CAACE,UAAW,KAAIF,UAAU,CAACG,SAAU,GAA1E;QAAA,UACIF;MADJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADY;AAAA,CAAd;;KAAMF,K;AAUNA,KAAK,CAACK,SAAN,GAAkB;EAChBJ,UAAU,EAAEJ;AADI,CAAlB;AAIAG,KAAK,CAACM,YAAN,GAAqB;EACnBL,UAAU,EAAE;AADO,CAArB;AAIA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}