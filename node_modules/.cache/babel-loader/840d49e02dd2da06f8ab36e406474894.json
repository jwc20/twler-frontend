{"ast":null,"code":"var _jsxFileName = \"/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/ResultTotals.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport Scatterplot from \"../charts/Scatterplot\";\nimport Chart from \"../charts/Chart\";\nimport Circles from \"../charts/Circles\";\nimport Axis from \"../charts/Axis\";\nimport { useChartDimensions, accessorPropsType } from \"../utils/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultTotals = _ref => {\n  _s();\n\n  let {\n    data,\n    xAccessor,\n    yAccessor,\n    xLabel,\n    yLabel\n  } = _ref;\n  // const [ref, dimensions] = useChartDimensions({\n  //   marginBottom: 77,\n  // });\n  const [ref] = useChartDimensions({\n    marginBottom: 77\n  });\n  const width = d3.min([window.innerWidth * 0.5, window.innerHeight * 0.5]);\n  let dimensions = {\n    width: width,\n    height: width,\n    margin: {\n      top: 40,\n      right: 60,\n      bottom: 50,\n      left: 50\n    }\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n  const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, dimensions.boundedWidth]).nice();\n  const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([dimensions.boundedHeight, 0]).nice();\n\n  const xAccessorScaled = d => xScale(xAccessor(d));\n\n  const yAccessorScaled = d => yScale(yAccessor(d));\n\n  const keyAccessor = (d, i) => i;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ResultTotals\",\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Totals and BW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      dimensions: dimensions,\n      children: [/*#__PURE__*/_jsxDEV(Axis, {\n        dimensions: dimensions,\n        dimension: \"x\",\n        scale: xScale,\n        label: xLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Axis, {\n        dimensions: dimensions,\n        dimension: \"y\",\n        scale: yScale,\n        label: yLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Circles, {\n        data: data,\n        keyAccessor: keyAccessor,\n        xAccessor: xAccessorScaled,\n        yAccessor: yAccessorScaled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultTotals, \"tMplYEzG1isRrTmEPbGuXWYQTeA=\", false, function () {\n  return [useChartDimensions];\n});\n\n_c = ResultTotals;\nexport default ResultTotals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultTotals\");","map":{"version":3,"names":["PropTypes","d3","Scatterplot","Chart","Circles","Axis","useChartDimensions","accessorPropsType","ResultTotals","data","xAccessor","yAccessor","xLabel","yLabel","ref","marginBottom","width","min","window","innerWidth","innerHeight","dimensions","height","margin","top","right","bottom","left","boundedWidth","boundedHeight","xScale","scaleLinear","domain","extent","range","nice","yScale","xAccessorScaled","d","yAccessorScaled","keyAccessor","i"],"sources":["/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/ResultTotals.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\n\nimport Scatterplot from \"../charts/Scatterplot\";\nimport Chart from \"../charts/Chart\";\nimport Circles from \"../charts/Circles\";\nimport Axis from \"../charts/Axis\";\n\nimport { useChartDimensions, accessorPropsType } from \"../utils/Utils\";\n\nconst ResultTotals = ({ data, xAccessor, yAccessor, xLabel, yLabel }) => {\n  // const [ref, dimensions] = useChartDimensions({\n  //   marginBottom: 77,\n  // });\n\n  const [ref]= useChartDimensions({\n      marginBottom: 77,\n    });\n\n  const width = d3.min([\n    window.innerWidth * 0.5,\n    window.innerHeight * 0.5,\n  ])\n  let dimensions = {\n    width: width,\n    height: width,\n    margin: {\n      top: 40,\n      right: 60,\n      bottom: 50,\n      left: 50,\n    },\n  }\n  dimensions.boundedWidth = dimensions.width\n    - dimensions.margin.left\n    - dimensions.margin.right\n  dimensions.boundedHeight = dimensions.height\n    - dimensions.margin.top\n    - dimensions.margin.bottom\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, xAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, yAccessor))\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  const xAccessorScaled = (d) => xScale(xAccessor(d));\n  const yAccessorScaled = (d) => yScale(yAccessor(d));\n  const keyAccessor = (d, i) => i;\n\n  return (\n    <div className=\"ResultTotals\" ref={ref}>\n      <h3>Totals and BW</h3>\n      <Chart dimensions={dimensions}>\n        <Axis\n          dimensions={dimensions}\n          dimension=\"x\"\n          scale={xScale}\n          label={xLabel}\n        />\n        <Axis\n          dimensions={dimensions}\n          dimension=\"y\"\n          scale={yScale}\n          label={yLabel}\n        />\n        <Circles\n          data={data}\n          keyAccessor={keyAccessor}\n          xAccessor={xAccessorScaled}\n          yAccessor={yAccessorScaled}\n        />\n      </Chart>\n    </div>\n  );\n};\n\nexport default ResultTotals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}