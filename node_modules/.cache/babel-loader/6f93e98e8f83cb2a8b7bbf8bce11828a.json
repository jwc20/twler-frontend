{"ast":null,"code":"var _jsxFileName = \"/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data] = useState([25, 50, 35, 15, 94, 10]);\n  const svgRef = useRef();\n  useEffect(() => {\n    /* *\n     * 1. Setting up the svg\n     * 2. Setting the scaling\n     * 3. Setting the Axes\n     * 4. Setting up the data for the svg\n     * */\n    // setting up svg\n    const w = 400;\n    const h = 100;\n    const svg = d3.select(svgRef.current).attr(\"width\", w).attr(\"height\", h).style(\"background\", \"#d3d3d3\").style(\"margin-top\", \"50\").style(\"overflow\", \"visible\"); // setting the scaling\n\n    const xScale = d3.scaleLinear().domain([0, data.length - 1]).range([0, w]);\n    const yScale = d3.scaleLinear().domain([0, h]).range([h, 0]);\n    const generateScaledLine = d3.line().x((d, i) => xScale(i)).y(yScale).curve(d3.curveCardinal); // setting the axes\n\n    const xAxis = d3.axisBottom(xScale).ticks(data.length).tickFormat(i => i + 1);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0, ${h})`);\n    svg.append(\"g\").call(yAxis); // setting up the data for the svg\n\n    svg.selectAll(\".line\").data([data]).join(\"path\").attr(\"d\", d => generateScaledLine(d)).attr(\"fill\", \"none\").attr(\"stroke\", \"black\");\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JTCXugbWj8LfjON7F49KQxJ8w5g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","App","data","svgRef","w","h","svg","select","current","attr","style","xScale","scaleLinear","domain","length","range","yScale","generateScaledLine","line","x","d","i","y","curve","curveCardinal","xAxis","axisBottom","ticks","tickFormat","yAxis","axisLeft","append","call","selectAll","join"],"sources":["/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nfunction App() {\n  const [data] = useState([25, 50, 35, 15, 94, 10]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    /* *\n     * 1. Setting up the svg\n     * 2. Setting the scaling\n     * 3. Setting the Axes\n     * 4. Setting up the data for the svg\n     * */\n\n    // setting up svg\n    const w = 400;\n    const h = 100;\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .style(\"background\", \"#d3d3d3\")\n      .style(\"margin-top\", \"50\")\n      .style(\"overflow\", \"visible\");\n\n    // setting the scaling\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, data.length - 1])\n      .range([0, w]);\n    const yScale = d3.scaleLinear().domain([0, h]).range([h, 0]);\n    const generateScaledLine = d3\n      .line()\n      .x((d, i) => xScale(i))\n      .y(yScale)\n      .curve(d3.curveCardinal);\n\n    // setting the axes\n    const xAxis = d3\n      .axisBottom(xScale)\n      .ticks(data.length)\n      .tickFormat((i) => i + 1);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0, ${h})`);\n    svg.append(\"g\").call(yAxis);\n\n    // setting up the data for the svg\n    svg\n      .selectAll(\".line\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"d\", (d) => generateScaledLine(d))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"black\");\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <svg ref={svgRef}></svg>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,IAASL,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAD,CAAvB;EACA,MAAMM,MAAM,GAAGL,MAAM,EAArB;EAEAC,SAAS,CAAC,MAAM;IACd;AACJ;AACA;AACA;AACA;AACA;IAEI;IACA,MAAMK,CAAC,GAAG,GAAV;IACA,MAAMC,CAAC,GAAG,GAAV;IACA,MAAMC,GAAG,GAAGN,EAAE,CACXO,MADS,CACFJ,MAAM,CAACK,OADL,EAETC,IAFS,CAEJ,OAFI,EAEKL,CAFL,EAGTK,IAHS,CAGJ,QAHI,EAGMJ,CAHN,EAITK,KAJS,CAIH,YAJG,EAIW,SAJX,EAKTA,KALS,CAKH,YALG,EAKW,IALX,EAMTA,KANS,CAMH,UANG,EAMS,SANT,CAAZ,CAXc,CAmBd;;IACA,MAAMC,MAAM,GAAGX,EAAE,CACdY,WADY,GAEZC,MAFY,CAEL,CAAC,CAAD,EAAIX,IAAI,CAACY,MAAL,GAAc,CAAlB,CAFK,EAGZC,KAHY,CAGN,CAAC,CAAD,EAAIX,CAAJ,CAHM,CAAf;IAIA,MAAMY,MAAM,GAAGhB,EAAE,CAACY,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAIR,CAAJ,CAAxB,EAAgCU,KAAhC,CAAsC,CAACV,CAAD,EAAI,CAAJ,CAAtC,CAAf;IACA,MAAMY,kBAAkB,GAAGjB,EAAE,CAC1BkB,IADwB,GAExBC,CAFwB,CAEtB,CAACC,CAAD,EAAIC,CAAJ,KAAUV,MAAM,CAACU,CAAD,CAFM,EAGxBC,CAHwB,CAGtBN,MAHsB,EAIxBO,KAJwB,CAIlBvB,EAAE,CAACwB,aAJe,CAA3B,CAzBc,CA+Bd;;IACA,MAAMC,KAAK,GAAGzB,EAAE,CACb0B,UADW,CACAf,MADA,EAEXgB,KAFW,CAELzB,IAAI,CAACY,MAFA,EAGXc,UAHW,CAGCP,CAAD,IAAOA,CAAC,GAAG,CAHX,CAAd;IAIA,MAAMQ,KAAK,GAAG7B,EAAE,CAAC8B,QAAH,CAAYd,MAAZ,EAAoBW,KAApB,CAA0B,CAA1B,CAAd;IACArB,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,KAArB,EAA4BhB,IAA5B,CAAiC,WAAjC,EAA+C,gBAAeJ,CAAE,GAAhE;IACAC,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,KAArB,EAtCc,CAwCd;;IACAvB,GAAG,CACA2B,SADH,CACa,OADb,EAEG/B,IAFH,CAEQ,CAACA,IAAD,CAFR,EAGGgC,IAHH,CAGQ,MAHR,EAIGzB,IAJH,CAIQ,GAJR,EAIcW,CAAD,IAAOH,kBAAkB,CAACG,CAAD,CAJtC,EAKGX,IALH,CAKQ,MALR,EAKgB,MALhB,EAMGA,IANH,CAMQ,QANR,EAMkB,OANlB;EAOD,CAhDQ,EAgDN,CAACP,IAAD,CAhDM,CAAT;EAkDA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,GAAG,EAAEC;IAAV;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA3DQF,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}