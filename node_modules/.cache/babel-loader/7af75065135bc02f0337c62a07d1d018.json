{"ast":null,"code":"var _jsxFileName = \"/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/TotalsAndBodyweight.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport Chart from \"../charts/Chart\"; // import Chart from \"./Chart/Chart\"\n// import Line from \"./Chart/Line\"\n// import Axis from \"./Chart/Axis-naive\"\n\nimport { useChartDimensions, accessorPropsType } from \"../utils/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TotalsAndBodyweight = _ref => {\n  _s();\n\n  let {\n    data,\n    xAccessor,\n    yAccessor,\n    label\n  } = _ref;\n  const [ref, dimensions] = useChartDimensions();\n  const xScale = d3.scaleTime().domain(d3.extent(data, xAccessor)).range([0, dimensions.boundedWidth]);\n  const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([dimensions.boundedHeight, 0]).nice();\n\n  const xAccessorScaled = d => xScale(xAccessor(d));\n\n  const yAccessorScaled = d => yScale(yAccessor(d));\n\n  const y0AccessorScaled = yScale(yScale.domain()[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TotalsAndBodyweight\",\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Totals and BW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      dimensions: dimensions,\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TotalsAndBodyweight, \"fKHM7scAuvSx77V7+8YKOhw+PZA=\", false, function () {\n  return [useChartDimensions];\n});\n\n_c = TotalsAndBodyweight;\nTotalsAndBodyweight.propTypes = {\n  // data: PropTypes.array,\n  xAccessor: accessorPropsType,\n  yAccessor: accessorPropsType,\n  label: PropTypes.string\n};\nTotalsAndBodyweight.defaultProps = {\n  xAccessor: d => d.x,\n  yAccessor: d => d.y\n};\nexport default TotalsAndBodyweight;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalsAndBodyweight\");","map":{"version":3,"names":["PropTypes","d3","Chart","useChartDimensions","accessorPropsType","TotalsAndBodyweight","data","xAccessor","yAccessor","label","ref","dimensions","xScale","scaleTime","domain","extent","range","boundedWidth","yScale","scaleLinear","boundedHeight","nice","xAccessorScaled","d","yAccessorScaled","y0AccessorScaled","propTypes","string","defaultProps","x","y"],"sources":["/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/TotalsAndBodyweight.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport Chart from \"../charts/Chart\";\n\n// import Chart from \"./Chart/Chart\"\n// import Line from \"./Chart/Line\"\n// import Axis from \"./Chart/Axis-naive\"\n\nimport { useChartDimensions, accessorPropsType } from \"../utils/Utils\";\n\nconst TotalsAndBodyweight = ({ data, xAccessor, yAccessor, label }) => {\n  const [ref, dimensions] = useChartDimensions();\n\n  const xScale = d3\n    .scaleTime()\n    .domain(d3.extent(data, xAccessor))\n    .range([0, dimensions.boundedWidth]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, yAccessor))\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  const xAccessorScaled = (d) => xScale(xAccessor(d));\n  const yAccessorScaled = (d) => yScale(yAccessor(d));\n  const y0AccessorScaled = yScale(yScale.domain()[0]);\n\n  return (\n    <div className=\"TotalsAndBodyweight\" ref={ref}>\n      <h3>Totals and BW</h3>\n      <Chart dimensions={dimensions}>\n        <Line data={data} />\n      </Chart>\n    </div>\n  );\n};\n\nTotalsAndBodyweight.propTypes = {\n  // data: PropTypes.array,\n  xAccessor: accessorPropsType,\n  yAccessor: accessorPropsType,\n  label: PropTypes.string,\n};\n\nTotalsAndBodyweight.defaultProps = {\n  xAccessor: (d) => d.x,\n  yAccessor: (d) => d.y,\n};\n\nexport default TotalsAndBodyweight;\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;AACA;AACA;;AAEA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,gBAAtD;;;AAEA,MAAMC,mBAAmB,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAAEC,IAAF;IAAQC,SAAR;IAAmBC,SAAnB;IAA8BC;EAA9B,CAA0C;EACrE,MAAM,CAACC,GAAD,EAAMC,UAAN,IAAoBR,kBAAkB,EAA5C;EAEA,MAAMS,MAAM,GAAGX,EAAE,CACdY,SADY,GAEZC,MAFY,CAELb,EAAE,CAACc,MAAH,CAAUT,IAAV,EAAgBC,SAAhB,CAFK,EAGZS,KAHY,CAGN,CAAC,CAAD,EAAIL,UAAU,CAACM,YAAf,CAHM,CAAf;EAKA,MAAMC,MAAM,GAAGjB,EAAE,CACdkB,WADY,GAEZL,MAFY,CAELb,EAAE,CAACc,MAAH,CAAUT,IAAV,EAAgBE,SAAhB,CAFK,EAGZQ,KAHY,CAGN,CAACL,UAAU,CAACS,aAAZ,EAA2B,CAA3B,CAHM,EAIZC,IAJY,EAAf;;EAMA,MAAMC,eAAe,GAAIC,CAAD,IAAOX,MAAM,CAACL,SAAS,CAACgB,CAAD,CAAV,CAArC;;EACA,MAAMC,eAAe,GAAID,CAAD,IAAOL,MAAM,CAACV,SAAS,CAACe,CAAD,CAAV,CAArC;;EACA,MAAME,gBAAgB,GAAGP,MAAM,CAACA,MAAM,CAACJ,MAAP,GAAgB,CAAhB,CAAD,CAA/B;EAEA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAqC,GAAG,EAAEJ,GAA1C;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,UAAU,EAAEC,UAAnB;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,EAAEL;MAAZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA1BD;;GAAMD,mB;UACsBF,kB;;;KADtBE,mB;AA4BNA,mBAAmB,CAACqB,SAApB,GAAgC;EAC9B;EACAnB,SAAS,EAAEH,iBAFmB;EAG9BI,SAAS,EAAEJ,iBAHmB;EAI9BK,KAAK,EAAET,SAAS,CAAC2B;AAJa,CAAhC;AAOAtB,mBAAmB,CAACuB,YAApB,GAAmC;EACjCrB,SAAS,EAAGgB,CAAD,IAAOA,CAAC,CAACM,CADa;EAEjCrB,SAAS,EAAGe,CAAD,IAAOA,CAAC,CAACO;AAFa,CAAnC;AAKA,eAAezB,mBAAf"},"metadata":{},"sourceType":"module"}