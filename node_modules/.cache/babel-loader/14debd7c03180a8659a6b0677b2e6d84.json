{"ast":null,"code":"var _jsxFileName = \"/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/EventTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useTable, useGlobalFilter, useAsyncDebounce, useFilters } from \"react-table\"; // new\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://127.0.0.1:3000\";\nexport function SelectColumnFilter(_ref) {\n  _s();\n\n  let {\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  } = _ref;\n  const options = useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: id,\n    id: id,\n    value: filterValue,\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c = SelectColumnFilter;\n\nfunction GlobalFilter(_ref2) {\n  _s2();\n\n  let {\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter\n  } = _ref2;\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `${count} records...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c2 = GlobalFilter;\n\nfunction EventTable(_ref3) {\n  _s3();\n\n  let {\n    columns,\n    events\n  } = _ref3;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    // new\n    preGlobalFilteredRows,\n    // new\n    setGlobalFilter // new\n\n  } = useTable({\n    columns,\n    data: events\n  }, useGlobalFilter, // new\n  useFilters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      preGlobalFilteredRows: preGlobalFilteredRows,\n      globalFilter: state.globalFilter,\n      setGlobalFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), headerGroups.map(headerGroup => headerGroup.headers.map(column => column.Filter ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: column.id,\n        children: [column.render(\"Header\"), \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), column.render(\"Filter\")]\n    }, column.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this) : null)), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      border: \"1\",\n      className: \"table-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(EventTable, \"OK8V3Nxuiqx02FnqzhX8+EybqS0=\", false, function () {\n  return [useTable];\n});\n\n_c3 = EventTable;\nexport default EventTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SelectColumnFilter\");\n$RefreshReg$(_c2, \"GlobalFilter\");\n$RefreshReg$(_c3, \"EventTable\");","map":{"version":3,"names":["useState","useEffect","useMemo","useTable","useGlobalFilter","useAsyncDebounce","useFilters","url","SelectColumnFilter","column","filterValue","setFilter","preFilteredRows","id","options","Set","forEach","row","add","values","e","target","value","undefined","map","option","i","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","setValue","onChange","EventTable","columns","events","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","data","headerGroup","headers","Filter","render","getHeaderGroupProps","getHeaderProps","getRowProps","cells","cell","getCellProps"],"sources":["/Users/cjw/Development/code/flatironSchool/phase-5/twler-frontend/src/components/EventTable.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport {\n  useTable,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useFilters,\n} from \"react-table\"; // new\n\nconst url = \"http://127.0.0.1:3000\";\n\nexport function SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  const options = useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  return (\n    <select\n      name={id}\n      id={id}\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <span>\n      Search:{\" \"}\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`${count} records...`}\n      />\n    </span>\n  );\n}\n\nfunction EventTable({ columns, events }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state, // new\n    preGlobalFilteredRows, // new\n    setGlobalFilter, // new\n  } = useTable(\n    {\n      columns,\n      data: events,\n    },\n    useGlobalFilter, // new\n    useFilters,\n  );\n\n  return (\n    <div>\n      <GlobalFilter\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        globalFilter={state.globalFilter}\n        setGlobalFilter={setGlobalFilter}\n      />\n\n\n {headerGroups.map((headerGroup) =>\n        headerGroup.headers.map((column) =>\n          column.Filter ? (\n            <div key={column.id}>\n              <label for={column.id}>{column.render(\"Header\")}: </label>\n              {column.render(\"Filter\")}\n            </div>\n          ) : null\n        )\n      )}\n\n\n\n\n\n\n\n\n\n      <table {...getTableProps()} border=\"1\" className=\"table-auto\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default EventTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}